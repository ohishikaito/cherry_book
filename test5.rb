# # # # # # # # # # # # # # # # # # # # # # # # # # # # class User
# # # # # # # # # # # # # # # # # # # # # # # # # # # #   def m
# # # # # # # # # # # # # # # # # # # # # # # # # # # #     p 'インスタンスメソッド'
# # # # # # # # # # # # # # # # # # # # # # # # # # # #   end

# # # # # # # # # # # # # # # # # # # # # # # # # # # #   def self.m
# # # # # # # # # # # # # # # # # # # # # # # # # # # #     p 'クラスメソッド'
# # # # # # # # # # # # # # # # # # # # # # # # # # # #   end
# # # # # # # # # # # # # # # # # # # # # # # # # # # # end

# # # # # # # # # # # # # # # # # # # # # # # # # # # # a=User.new
# # # # # # # # # # # # # # # # # # # # # # # # # # # # a.m
# # # # # # # # # # # # # # # # # # # # # # # # # # # # User.m
# # # # # # # # # # # # # # # # # # # # # # # # # # # class Hoge < String

# # # # # # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # # # # # a=Hoge.new
# # # # # # # # # # # # # # # # # # # # # # # # # # # p a.class
# # # # # # # # # # # # # # # # # # # # # # # # # # # p a.is_a?(String)
# # # # # # # # # # # # # # # # # # # # # # # # # class User
# # # # # # # # # # # # # # # # # # # # # # # # #   attr_accessor :name
# # # # # # # # # # # # # # # # # # # # # # # # #   def initialize(name)
# # # # # # # # # # # # # # # # # # # # # # # # #     @name = name
# # # # # # # # # # # # # # # # # # # # # # # # #   end
# # # # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # # # p User.ancestors

# # # # # # # # # # # # # # # # # # # # # # # # # # def piyo(user: user, **a)
# # # # # # # # # # # # # # # # # # # # # # # # # #   p user
# # # # # # # # # # # # # # # # # # # # # # # # # #   p a[:hoge]
# # # # # # # # # # # # # # # # # # # # # # # # # #   p a.to_s
# # # # # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # # # # user = User.new('name')
# # # # # # # # # # # # # # # # # # # # # # # # # # module Object::Fuga
# # # # # # # # # # # # # # # # # # # # # # # # # #   def hello
# # # # # # # # # # # # # # # # # # # # # # # # # #     p 'hello'
# # # # # # # # # # # # # # # # # # # # # # # # # #   end
# # # # # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # # # # a={hoge: :symbol_hoge, fuga: Fuga}
# # # # # # # # # # # # # # # # # # # # # # # # # # p a
# # # # # # # # # # # # # # # # # # # # # # # # # # # user = {user: 'user'}
# # # # # # # # # # # # # # # # # # # # # # # # # # piyo(user: user, **a)
# # # # # # # # # # # # # # # # # # # # # # # # # # hoge = 'hoge'
# # # # # # # # # # # # # # # # # # # # # # # # # # def hoge.hello
# # # # # # # # # # # # # # # # # # # # # # # # # #   p 'hoge!'
# # # # # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # # # # hoge.hello #=> 'hoge!'
# # # # # # # # # # # # # # # # # # # # # # # # module Hoge
# # # # # # # # # # # # # # # # # # # # # # # #   def hello
# # # # # # # # # # # # # # # # # # # # # # # #     p 'hello'
# # # # # # # # # # # # # # # # # # # # # # # #   end
# # # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # # class Object
# # # # # # # # # # # # # # # # # # # # # # # #   include Hoge
# # # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # # a=1
# # # # # # # # # # # # # # # # # # # # # # # # a.hello
# # # # # # # # # # # # # # # # # # # # # # # # p Object.ancestors
# # # # # # # # # # # # # # # # # # # # # # # # p Hoge.class
# # # # # # # # # # # # # # # # # # # # # # # module A
# # # # # # # # # # # # # # # # # # # # # # #   class B
# # # # # # # # # # # # # # # # # # # # # # #   end
# # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # a=A::B.new
# # # # # # # # # # # # # # # # # # # # # # # p a.class
# # # # # # # # # # # # # # # # # # # # # # # class C < A::B

# # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # p c = C.new
# # # # # # # # # # # # # # # # # # # # # # # p C.ancestors
# # # # # # # # # # # # # # # # # # # # # # module A
# # # # # # # # # # # # # # # # # # # # # #   def hoge
# # # # # # # # # # # # # # # # # # # # # #     p 'hoge'
# # # # # # # # # # # # # # # # # # # # # #   end
# # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # class B
# # # # # # # # # # # # # # # # # # # # # #   include A
# # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # b=B.new
# # # # # # # # # # # # # # # # # # # # # # b.hoge
# # # # # # # # # # # # # # # # # # # # # class OtintinError < StandardError

# # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # begin
# # # # # # # # # # # # # # # # # # # # # raise OtintinError
# # # # # # # # # # # # # # # # # # # # # rescue OtintinError=> e
# # # # # # # # # # # # # # # # # # # # #   p e
# # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # p NoMethodError.ancestors

# # # # # # # # # # # # # # # # # # # def gree
# # # # # # # # # # # # # # # # # # #   p 'おは'
# # # # # # # # # # # # # # # # # # #   yield
# # # # # # # # # # # # # # # # # # # end

# # # # # # # # # # # # # # # # # # # gree do
# # # # # # # # # # # # # # # # # # #   p "こん"
# # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # gree
# # # # # # # # # # # # # # # # # # # a=Proc.new { |a,b,c,d,e,f,g| 'hoge' }
# # # # # # # # # # # # # # # # # # # p a.methods.sort
# # # # # # # # # # # # # # # # # # # p a.arity
# # # # # # # # # # # # # # # # # # # p Proc.ancestors
# # # # # # # # # # # # # # # # # # # p Object.su perclass
# # # # # # # # # # # # # # # # # # aa='aaa'
# # # # # # # # # # # # # # # # # # # a=aa.blank?
# # # # # # # # # # # # # # # # # # p a.object_id
# # # # # # # # # # # # # # # # # # p false.object_id
# # # # # # # # # # # # # # # # # # p a===false
# # # # # # # # # # # # # # # # # # p Range.ancestors
# # # # # # # # # # # # # # # # # # ri Array
# # # # # # # # # # # # # # # # # =begin
# # # # # # # # # # # # # # # # # a=[1,2,3].freeze
# # # # # # # # # # # # # # # # # a=a[0]=1
# # # # # # # # # # # # # # # # # aa
# # # # # # # # # # # # # # # # # =end
# # # # # # # # # # # # # # # # # # aaa
# # # # # # # # # # # # # # # # # # p 'aaa'.kind_of?(String)
# # # # # # # # # # # # # # # # # # p 'aaa'.is_a?(String)

# # # # # # # # # # # # # # # # # def hoge(*array)
# # # # # # # # # # # # # # # # #   p *array
# # # # # # # # # # # # # # # # #   'fuga'
# # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # p hoge :fuga, :piyo
# # # # # # # # # # # # # # # # # p self.methods
# # # # # # # # # # # # # # # # # p Float::MAX
# # # # # # # # # # # # # # # # # p 'h\'oge'
# # # # # # # # # # # # # # # # # p 'a\\b' == 'a\b'
# # # # # # # # # # # # # # # # # Kernel.puts('a')
# # # # # # # # # # # # # # # # # Kernel.`(class)
# # # # # # # # # # # # # # # # # s = "\xa4".force_encoding("utf-8")
# # # # # # # # # # # # # # # # s = "name".encode(Encoding::UTF_8)
# # # # # # # # # # # # # # # # p s
# # # # # # # # # # # # # # # # p s.bytesize
# # # # # # # # # # # # # # # a=[1,2,3,4]
# # # # # # # # # # # # # # # p a[a.size-1]
# # # # # # # # # # # # # # # p a[-a.size]
# # # # # # # # # # # # # # # # a[1..2] = 'hoge'
# # # # # # # # # # # # # # # a[1],a[2] = 'hoge', false
# # # # # # # # # # # # # # # p a
# # # # # # # # # # # # # # p a="ABC".."ZZZ"
# # # # # # # # # # # # # # p a.include?("A") #=> true
# # # # # # # # # # # # # # p a.member?("A") #=> true
# # # # # # # # # # # # # # p a.cover?("A") #=> true
# # # # # # # # # # # # # # # p begin <= a <= end
# # # # # # # # # # # # # a = Array.methods
# # # # # # # # # # # # # p a
# # # # # # # # # # # # if nil.nil?
# # # # # # # # # # # #   p 'aa'
# # # # # # # # # # # # end
# # # # # # # # # # # p 'aaa'.is_a?(String) #=> true
# # # # # # # # # # # p 'aaa'.is_a?(String) #=> true
# # # # # # # # # # # a="hoge"
# # # # # # # # # # a={a: 'a'}
# # # # # # # # # # b="hoge:#{a.to_a}".to_s
# # # # # # # # # # p b
# # # # # # # # # a=Exception.new
# # # # # # # # # class Exception
# # # # # # # # #   def message
# # # # # # # # #     p '1'
# # # # # # # # #     p self.message
# # # # # # # # #   end
# # # # # # # # # end
# # # # # # # # # p a.message
# # # # # # # # p 11.coerce(11)
# # # # # # # # p true.methods
# # # # # # # obj='obj'
# # # # # # # # obj2 = obj.class.allocate
# # # # # # # a=String.initialize_copy(obj)
# # # # # # a={taro: 'taro'}
# # # # # # def a(a)
# # # # # #   p a.object_id
# # # # # #   a[:taro] = '111111'
# # # # # #   p a.object_id
# # # # # # end
# # # # # # p a.object_id
# # # # # # a(a)
# # # # # # p @a;
# # # # # # a=1 if false
# # # # # # p a #=> nil
# # # # # message='mmmmm'
# # # # # def message.length=(a)
# # # # #   @length = a
# # # # # end
# # # # # p message.length
# # # # # message.length = 1
# # # # # p message.length
# # # # a=[1,2,3]
# # # # p a[0] #=> 1
# # # # p a.[](0) #=> 1
# # # a="123"
# # # class String
# # #   def to_i
# # #     if self.class == String
# # #       p 'hoge'
# # #     end
# # #   end
# # # end
# # # a.to_i #=> 'hoge'

# # a = b = 0
# # p a.object_id == b.object_id #=> true
# a=(1)
# p    a
