# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # def a(a, b, c = 0, d = 0)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #   p "#{a}:#{b}:#{c}:#{d}"
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # end

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # def bar
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #   'bar'
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # a(1, 2, Time.now, bar)

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # p ''.empty?
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # p nil.nil?
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # p 'hoge'.nil?

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # p a.upcase
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # p a
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # p a.upcase!
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # p a
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # false =1
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # a = 'hoge'
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # p a.object_id
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # b = a
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # p a.equal?(b)

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # require 'date'
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # p Date.today
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # p Date.today.inspect
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # class Foo
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # p Foo.new.inspect # => "#<Foo:0x0300c868>"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # class Bar
# # # # # # # # # # # # # # # # # # # # # # # # # # # # #   def initialize
# # # # # # # # # # # # # # # # # # # # # # # # # # # # #     @bar = 1
# # # # # # # # # # # # # # # # # # # # # # # # # # # # #   end
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # p Bar.new
# # # # # # # # # # # # # # # # # # # # # # # # # # # p Bar.new.inspect
# # # # # # # # # # # # # # # # # # # # # # # # # # # # numbers=[1,2,3,4]
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # new_numbers=numbers.map{|n| n*10}
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # new_numbers=numbers.select{|n| n.even?}
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # new_numbers=numbers.reject{|n| n%3==0}
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # new_numbers=numbers.reject!{|n| n%3==0}
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # new_numbers=numbers.find{|n| n.even?}
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # new_numbers=numbers.inject(0){ |result, n| result + n }
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # p numbers
# # # # # # # # # # # # # # # # # # # # # # # # # # # # p new_numbers
# # # # # # # # # # # # # # # # # # # # # # # # # # # # p ['a','b','c'].map(&:upcase)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # p numbers.select(&:even?)

# # # # # # # # # # # # # # # # # # # # # # # # # # # range = 1...5
# # # # # # # # # # # # # # # # # # # # # # # # # # # p range
# # # # # # # # # # # # # # # # # # # # # # # # # # # p range.include?(0)
# # # # # # # # # # # # # # # # # # # # # # # # # # # p range.include?(1)
# # # # # # # # # # # # # # # # # # # # # # # # # # # p range.include?(5)

# # # # # # # # # # # # # # # # # # # # # # # # # # # p (1..5).include?(1)
# # # # # # # # # # # # # # # # # # # # # # # # # # # a = [1,2,3,4,5]
# # # # # # # # # # # # # # # # # # # # # # # # # # # p a[1..2]
# # # # # # # # # # # # # # # # # # # # # # # # # # def liquid?(n)
# # # # # # # # # # # # # # # # # # # # # # # # # #   p (1...100).include?(n)
# # # # # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # # # # liquid?(1)
# # # # # # # # # # # # # # # # # # # # # # # # # def charge(n)
# # # # # # # # # # # # # # # # # # # # # # # # #   case n
# # # # # # # # # # # # # # # # # # # # # # # # #   when 0..5
# # # # # # # # # # # # # # # # # # # # # # # # #     p 'hoge'
# # # # # # # # # # # # # # # # # # # # # # # # #   else
# # # # # # # # # # # # # # # # # # # # # # # # #     p 'fuga'
# # # # # # # # # # # # # # # # # # # # # # # # #   end
# # # # # # # # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # # # # # # # charge(6)
# # # # # # # # # # # # # # # # # # # # # # # # # p ('a'...'e').to_a
# # # # # # # # # # # # # # # # # # # # # # # # # p ('bad'..'bag').to_a
# # # # # # # # # # # # # # # # # # # # # # # # # p [*1..5]
# # # # # # # # # # # # # # # # # # # # # # # # # p [1..5]
# # # # # # # # # # # # # # # # # # # # # # # # a=(1..4).to_a
# # # # # # # # # # # # # # # # # # # # # # # sum=0
# # # # # # # # # # # # # # # # # # # # # # # # a.each{ |n| sum += n}
# # # # # # # # # # # # # # # # # # # # # # # # (1..14).each {|n| sum += n}
# # # # # # # # # # # # # # # # # # # # # # # a=[]
# # # # # # # # # # # # # # # # # # # # # # # (1..14).step {|n| a<<n}
# # # # # # # # # # # # # # # # # # # # # # # p a
# # # # # # # # # # # # # # # # # # # # # # a=[1,2,3]
# # # # # # # # # # # # # # # # # # # # # # b=[3,4,5]
# # # # # # # # # # # # # # # # # # # # # # # p a.last(-10)
# # # # # # # # # # # # # # # # # # # # # # # p a[-10]=11
# # # # # # # # # # # # # # # # # # # # # # # a.delete![2]
# # # # # # # # # # # # # # # # # # # # # # # p a+b
# # # # # # # # # # # # # # # # # # # # # # # p a.concat(b)
# # # # # # # # # # # # # # # # # # # # # # # p a|b
# # # # # # # # # # # # # # # # # # # # # # # p a-b
# # # # # # # # # # # # # # # # # # # # # # # p b-a
# # # # # # # # # # # # # # # # # # # # # # p a&b
# # # # # # # # # # # # # # # # # # # # # require 'set'
# # # # # # # # # # # # # # # # # # # # # a = Set.new([1,2,3])
# # # # # # # # # # # # # # # # # # # # # b = Set.new([3,4,5])
# # # # # # # # # # # # # # # # # # # # # p a|b
# # # # # # # # # # # # # # # # # # # # a=[]
# # # # # # # # # # # # # # # # # # # # b=[2,3]
# # # # # # # # # # # # # # # # # # # # a.push(1)
# # # # # # # # # # # # # # # # # # # # # p a.push(b)
# # # # # # # # # # # # # # # # # # # # p a.push(*b)
# # # # # # # # # # # # # # # # # # # def g(*names)
# # # # # # # # # # # # # # # # # # #   p "#{names.join('と')}、こんにちは"
# # # # # # # # # # # # # # # # # # # end
# # # # # # # # # # # # # # # # # # # g('田中さん','うんち')
# # # # # # # # # # # # # # # # # # a=[1,2,3]
# # # # # # # # # # # # # # # # # # p [a]
# # # # # # # # # # # # # # # # # # p [*a]
# # # # # # # # # # # # # # # # # # p [-1,0,*a,4,5]
# # # # # # # # # # # # # # # # # # p %w(app\ le melon or)
# # # # # # # # # # # # # # # # # a='hoge'
# # # # # # # # # # # # # # # # # p a.chars
# # # # # # # # # # # # # # # # a=Array.new(5){ |n| p n }
# # # # # # # # # # # # # # # # p a
# # # # # # # # # # # # # # # a = {'b': 'c'}
# # # # # # # # # # # # # # # p a[:b].object_id
# # # # # # # # # # # # # # # a[:b]="d"
# # # # # # # # # # # # # # # p a
# # # # # # # # # # # # # # # p a[:b].object_id
# # # # # # # # # # # # # # # e = {'f': 'g'}
# # # # # # # # # # # # # # # e[:f]=a[:b]
# # # # # # # # # # # # # # # p e[:f].object_id
# # # # # # # # # # # # # # # a=Array.new(5,0)
# # # # # # # # # # # # # # # p 1.negative!
# # # # # # # # # # # # # # n='hoge'.freeze
# # # # # # # # # # # # # # n='fuga'
# # # # # # # # # # # # # # p n
# # # # # # # # # # # # # a=[1,2,3,4,5]
# # # # # # # # # # # # # a[1..3]=100
# # # # # # # # # # # # # p a
# # # # # # # # # # # # ar=['a','b','c']
# # # # # # # # # # # # br = ar.each.with_index(10){ |a, i| "a:#{a} + i:#{i}"}
# # # # # # # # # # # # p br
# # # # # # # # # # # # # p ar.each_with_index
# # # # # # # # # # # # File.open("./sample.txt", "w") do |file|
# # # # # # # # # # # #   file.puts("1")
# # # # # # # # # # # #   file.puts("2")
# # # # # # # # # # # #   file.puts("3")
# # # # # # # # # # # # end
# # # # # # # # # # # a = []
# # # # # # # # # # # a.delete 100 do
# # # # # # # # # # #   p 'NG'
# # # # # # # # # # # end
# # # # # # # # # # # a.delete(100) {
# # # # # # # # # # #   p 'NG'
# # # # # # # # # # # }
# # # # # # # # # # x=['a','b','c']
# # # # # # # # # # y=x.map{|a| "#{a}+1"}.join('---')
# # # # # # # # # # p y
# # # # # # # # # sum=0
# # # # # # # # # 5.times { |n| sum+=n; p sum}
# # # # # # # # # p sum
# # # # # # # # a=[]
# # # # # # # # 10.step(1,-2) { |n| a<< n}
# # # # # # # # p a
# # # # # # # a=[]
# # # # # # # # while a.size < 5 do a<<1 end

# # # # # # #   begin
# # # # # # #     a<<1; p "hoge"
# # # # # # #   end while false
# # # # # # #   p a
# # # # # # # until a.length < 3
# # # # # # #   p a.delete_at(-1)
# # # # # # # end
# # # # # # p a
# # # # # # sum=0
# # # # # # for n in a
# # # # # #   hoge = "hoge"
# # # # # #   sum += n
# # # # # # end
# # # # # # p sum
# # # # # # # p hoge

# # # # # a=[1,12,3,4]
# # # # # # loop do
# # # # # while true
# # # # #   n= a.sample
# # # # #   p n
# # # # #   break if n == 3
# # # # # end
# # # # ret = while true
# # # #         break(123)
# # # #       end

# # # # p ret
# # # fruits=['apple','melon','orange']
# # # numbers=[1,2,3]
# # # catch :donee do
# # #   fruits.shuffle.each do |fruit|
# # #     numbers.shuffle.each do |n|
# # #       puts "#{fruit},#{n}"
# # #       if fruit=='orange'&&n==3
# # #         throw :donee
# # #       end
# # #     end
# # #   end
# # # end
# a=[1,2,3,4,5]
# i=0
# while i<a.length
#   n = ['ok','ng'].sample
#   p n
#   redo if n == 'ok'
#   p n
#   i+=1
# end


